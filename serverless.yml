# For full config options, check the docs:
#    docs.serverless.com

service: habby

provider:
  name: aws
  runtime: nodejs4.3

package:
 exclude:
  - .git

functions:
  authorize:
    handler: methods/oauth.authorize
    events:
    - http:
        path: authorize
        method: get

  access:
    handler: methods/oauth.access
    events:
    - http:
        path: access
        method: get    

  cron:
    handler: methods/cron.cron
    timeout: 30
    events:
    - http:
        path: cron
        method: get  
    - schedule:
        rate: rate(20 minutes)
        enabled: true 

  midnight:
    handler: methods/midnight.midnight
    timeout: 30
    events:
    - http:
        path: midnight
        method: get
    - schedule: cron(1 0 * * ? *)
  
  challenge:
    handler: handler.challenge
    timeout: 15
    events:
    - http:
        path: challenge
        method: post  

  debug:
    handler: methods/dev.debug
    events:
    - http:
        path: debug
        method: get  

  reset:
    handler: methods/dev.reset
    events:
    - http:
        path: reset
        method: get  

plugins:
- serverless-offline
- serverless-plugin-write-env-vars
- serverless-mocha-plugin

custom:
  projectName: Habby
  remind: 
    last_call: 9:30
    interval: 20
    timeout: 2
  slack:
    client_id: '85126897729.85066508995'
    client_secret: '99b42a45ab597aa1fd85dea58e957a0a'
  redis:
    host: redis-10700.c9.us-east-1-4.ec2.cloud.redislabs.com
    port: 10700
  writeEnvVars:
      PROJECT_NAME: ${self:custom.projectName}
      REDIS_HOST: ${self:custom.redis.host}
      REDIS_PORT: ${self:custom.redis.port}
      REMIND_TIMOUT: ${self:custom.remind.timeout}
      REMIND_INTERVAL: ${self:custom.remind.interval}
      REMIND_LAST_CALL: ${self:custom.remind.last_call}
      SLACK_CLIENT_ID: ${self:custom.slack.client_id}
      SLACK_CLIENT_SECRET: ${self:custom.slack.client_secret}